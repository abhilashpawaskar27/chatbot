1. HTML Structure
Defines a basic webpage with a chat interface (chat-container).

Includes a header, chat box, and input field for user interaction.

Uses semantic elements for accessibility (input, button).

2. CSS Styling
Applies aesthetic and functional design with flexbox for alignment.

Styles chat bubbles differently for the bot and user messages.

Uses color-coded elements (#81c784 for bot responses, #dcedc8 for user messages).

3. JavaScript Functionality
Implements dynamic message handling via appendMessage().

Validates tracking IDs (ensuring 3-digit numeric input).

Simulates package status retrieval using getPackageDetails(), mapping IDs to predefined categories.

Uses event listeners for handling user input (keypress and click events).

Adds a small delay (setTimeout()) for bot responses to mimic real-world interactions.

4. Optimization Techniques
Prevents excessive DOM manipulation by appending elements efficiently.

Keeps messages within a scrollable chat box for better UI experience.

Ensures responsive design (meta viewport) for adaptability across devices.

